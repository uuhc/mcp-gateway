# Logger configuration
logger:
  level: "${APISERVER_LOGGER_LEVEL:info}"                                         # debug, info, warn, error
  format: "${APISERVER_LOGGER_FORMAT:console}"                                    # json, console
  output: "${APISERVER_LOGGER_OUTPUT:stdout}"                                     # stdout, file
  file_path: "${APISERVER_LOGGER_FILE_PATH:/var/log/unla/apiserver.log}"   # path to log file when output is file
  max_size: ${APISERVER_LOGGER_MAX_SIZE:100}                                      # max size of log file in MB
  max_backups: ${APISERVER_LOGGER_MAX_BACKUPS:3}                                  # max number of backup files
  max_age: ${APISERVER_LOGGER_MAX_AGE:7}                                          # max age of backup files in days
  compress: ${APISERVER_LOGGER_COMPRESS:true}                                     # whether to compress backup files
  color: ${APISERVER_LOGGER_COLOR:true}                                           # whether to use color in console output
  stacktrace: ${APISERVER_LOGGER_STACKTRACE:true}                                 # whether to include stacktrace in error logs

# i18n configuration
i18n:
  path: "${APISERVER_I18N_PATH:./configs/i18n}"                                     # path to i18n translation files

# Super admin configuration
super_admin:
  username: "${SUPER_ADMIN_USERNAME:admin}"
  password: "${SUPER_ADMIN_PASSWORD:admin}"

database:
  type: "${APISERVER_DB_TYPE:sqlite}"
  host: "${APISERVER_DB_HOST:localhost}"
  port: ${APISERVER_DB_PORT:5432}
  user: "${APISERVER_DB_USER:postgres}"
  password: "${APISERVER_DB_PASSWORD:example}"
  dbname: "${APISERVER_DB_NAME:./unla.db}"
  sslmode: "${APISERVER_DB_SSL_MODE:disable}"

# Storage configuration
storage:
  type: "${GATEWAY_STORAGE_TYPE:db}"  # disk or db
  revision_history_limit: ${GATEWAY_STORAGE_REVISION_HISTORY_LIMIT:10}  # number of versions to keep
  # Database configuration (only used when type is db)
  database:
    type: "${GATEWAY_DB_TYPE:sqlite}"
    host: "${GATEWAY_DB_HOST:localhost}"
    port: ${GATEWAY_DB_PORT:5432}
    user: "${GATEWAY_DB_USER:postgres}"
    password: "${GATEWAY_DB_PASSWORD:example}"
    dbname: "${GATEWAY_DB_NAME:./unla.db}"
    sslmode: "${GATEWAY_DB_SSL_MODE:disable}"
  # Disk configuration (only used when type is disk)
  disk:
    path: "${GATEWAY_STORAGE_DISK_PATH:}"

# Notifier configuration
notifier:
  role: "${APISERVER_NOTIFIER_ROLE:sender}"
  # Type of notifier to use (signal, api, redis, composite)
  type: "${APISERVER_NOTIFIER_TYPE:signal}"

  # Signal configuration (only used when type is signal)
  signal:
    signal: "${APISERVER_NOTIFIER_SIGNAL:SIGHUP}"
    pid: "${APISERVER_NOTIFIER_SIGNAL_PID:/var/run/mcp-gateway.pid}"

  # API configuration (only used when type is api)
  api:
    port: ${APISERVER_NOTIFIER_API_PORT:5235}
    target_url: "${APISERVER_NOTIFIER_API_TARGET_URL:http://localhost:5235/_reload}"

  # Redis configuration (only used when type is redis)
  redis:
    addr: "${APISERVER_NOTIFIER_REDIS_ADDR:localhost:6379}"
    password: "${APISERVER_NOTIFIER_REDIS_PASSWORD:UseStrongPasswordIsAGoodPractice}"
    db: ${APISERVER_NOTIFIER_REDIS_DB:0}
    topic: "${APISERVER_NOTIFIER_REDIS_TOPIC:mcp-gateway:reload}"

openai:
  api_key: "${OPENAI_API_KEY}"
  model: "${OPENAI_MODEL:gpt-4.1}"
  base_url: "${OPENAI_BASE_URL:https://api.openai.com/v1/}"

# JWT configuration
jwt:
  secret_key: "${APISERVER_JWT_SECRET_KEY:Pls-Change-Me!}"  # Change this in production
  duration: "${APISERVER_JWT_DURATION:24h}"                  # Token duration
